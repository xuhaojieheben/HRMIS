<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <welcome-file-list>
    <welcome-file>/login.jsp</welcome-file>
  </welcome-file-list>
   <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>
  <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:applicationContext.xml</param-value>
  	</context-param>
 <servlet>
 <servlet-name>dispatcherServlet</servlet-name>
 <servlet-class>
  org.springframework.web.servlet.DispatcherServlet
 </servlet-class>
 <!-- 自定义servlet文件名、文件位置需要使用该参数配置 -->
 <init-param>
 <!-- 分发器拦截的上下文-contextConfigLocation|指定servlet context配置文件的位置 -->
  <param-name>contextConfigLocation</param-name>
  <param-value>classpath:spring-servlet.xml</param-value>
 </init-param>
 <load-on-startup>1</load-on-startup>

 
 </servlet>
 
 <!--配置servlet与处理请求的映射模式，会对所有*.jsp的后缀请求处理-->
 <servlet-mapping>
 <servlet-name>dispatcherServlet</servlet-name>
 <url-pattern>/</url-pattern>
 </servlet-mapping>

 <!--指定上下文配置文件的位置，指定classpath下的spring-mvc-config.xml文件
使用Maven风格，可以将该文件放在src/main/resources目录下
-->
<!--<context-param>
 <param-name>contextConfigLocation</param-name>
 <param-value>classpath:spring-servlet.xml</param-value>
</context-param>-->

 <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
</web-app>
